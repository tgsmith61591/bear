version: 2

jobs:
  # For testing PyPy rather than CPython
  pypy36:
    docker:
      - image: pypy:3-6.0.0
    # Used in the shared CI scripts, not actually in any of the
    # direct tests for Circle
    environment:
      - PYTHON_VERSION: "3.5"
      - SKIP_TESTS: "false"
      - TESTING_ON_CIRCLE: "true"
    steps:
      # Download and cache dependencies
      - restore_cache:
          keys:
          - pypy3-ccache-{{ .Branch }}
          # fallback to using the latest cache if no exact match is found
          - pypy3-ccache

      - checkout
      - run: ./build_tools/circle/before_install.sh
      - run: ./build_tools/circle/build_test_pypy.sh && ./build_tools/shared/build_test_bear_packages.sh
      - save_cache:
          key: pypy3-ccache-{{ .Branch }}-{{ .BuildNum }}
          paths:
            - ~/.ccache
            - ~/.cache/pip

  # For testing lint
  test-linting:
    docker:
      - image: python:3.6
    working_directory: ~/bear
    steps:
    - checkout
    - run: make test-lint

  # For documentation deployment. You'll need the following environment vars
  # in your Circle CI settings, otherwise this will not work.
  #
  # GH_NAME (your git username)
  # GH_EMAIL (your git email)
  # GH_TOKEN (the personal Git token with pushes enabled)
  deploy-doc:
    docker:
    - image: python:3.6
    working_directory: ~/bear
    steps:
    - checkout
    - run: ./build_tools/circle/before_install.sh
    - run: make doc-requirements
    - run: make install
    - run: ./build_tools/circle/build_push_doc.sh

workflows:
  version: 2

  # All PyPy jobs:
  testing:
    jobs:
      - pypy36
      - test-linting

  # All deployment
  deploy:
    jobs:
      - deploy-doc
