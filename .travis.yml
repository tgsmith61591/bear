# The Travis build will test both Linux AND OSX distributions, but language
# needs to be overridden to "generic" for Mac, otherwise the build will fail
# until Python is downloaded via Homebrew (which is handled in the
# before_install.sh). Note that none of the test envs or wheels test/create
# artifacts on <64 bit Linux or Mac. All artifacts are 64-bit ONLY.

language: python
sudo: required

cache:
  apt: true
  directories:
  - $HOME/.cache/pip
  - $HOME/.ccache

before_install:
  - source build_tools/travis/before_install.sh
env:
  global:
    - PYMODULE=bear
    - TEST_DIR=/tmp/bear
    - OMP_NUM_THREADS=4
    - OPENBLAS_NUM_THREADS=4
    # Deployment variables:
    # - TWINE_REPOSITORY_URL="https://test.pypi.org/legacy/"  # only for test
    - TWINE_USERNAME="tgsmith61591.gh"
    - secure: "nLu1oztl7hWoLZbUc3lWoTVC0x4feY7x3S0z2RzbbVg7EjoRUNS1do1bRxsNBvZt1ujQAmRN2hTA6gr66KtElHtKAMbbx7/MUdFvnWQdw6urVwapRxPyzHv5Yhg1+iBaKAeUWeSSX1QETsCbPgmu6vzxFfp1wlCg++kO9n0RsNSlc9TejgPyVRY+mMxFktbEydfXJCMVg6D0wHJ+No3l2Y0k2UNfzSwYy+a4JobX6uad+8z303mr9+1iQyfiQyTyiurAPw3nM/sSqizV0LBdjm4mCho1aopZwF7gfh4YwYLYuVz6btGIoR5fEoF2nCTOKFyehooPWyx0vllKoUZ5BJMsJEPYXQnDQulimAoBjaTt/2TFxjdyHEuK7gAMko19Vvb5209yVoi/+REfZ0qC3P1pvF5iHKTl9mEkuMwvr2UYaetH7IsZq610c7aZf0ygj/snx4SfkFLvl5LolSqqI3Mzb9vKsef1yrf/G5L4dARC8gALfz6DS0e2GhnJDJafDGXIlfnx+tG0bKs1+vTkI8R09P7BxgaCTEeAWUdycBE2wx4hD7a58rStvHNU8tunbtBhQgHkAx/k5Cwd32LCQazWJLSht0SCdkW8mnW+U5IkcHHh2/7kYQIw2gnEiwiNGiBuuZXPfeYJRd1AqsjkXk798jKV9Xg1GD14mHdL628="

matrix:
  include:
    # This environment tests the oldest supported anaconda env.
    - os: linux
      dist: trusty
      services:
        - docker
      env: DISTRIB="conda" PYTHON_VERSION="2.7" COVERAGE=true
           DOCKER_IMAGE="quay.io/pypa/manylinux1_x86_64"
           DOCKER_CONTAINER_NAME="bearcontainer" DEPLOY=true

    # This environment tests the same conditions as above, but tests against
    # MAC OS X
    - os: osx
      language: generic
      env: DISTRIB="conda" PYTHON_VERSION="2.7" COVERAGE=true DEPLOY=true

    # This environment tests Python 3.5 support on linux
    - os: linux
      dist: trusty
      services:
        - docker
      env: DISTRIB="conda" PYTHON_VERSION="3.5" COVERAGE=true DEPLOY=true
           DOCKER_IMAGE="quay.io/pypa/manylinux1_x86_64"
           DOCKER_CONTAINER_NAME="bearcontainer"

    # This environment tests Python 3.5 support on MAC OS X
    - os: osx
      language: generic
      env: DISTRIB="conda" PYTHON_VERSION="3.5" COVERAGE=true DEPLOY=true

    # This environment tests the newest supported Anaconda release (4.x) and
    # runs on linux
    - os: linux
      dist: trusty
      env: DISTRIB="conda" PYTHON_VERSION="3.6.1" COVERAGE=true
           DOCKER_IMAGE="quay.io/pypa/manylinux1_x86_64"
           DOCKER_CONTAINER_NAME="bearcontainer" DEPLOY=true
           TEST_DOCSTRINGS="true"

install: source build_tools/travis/install.sh
before_script: bash build_tools/travis/before_script.sh
script:
  - bash build_tools/travis/test_script.sh
  - bash build_tools/shared/build_test_bear_packages.sh

# we set +e to re-instate the error-tolerant state. The problem is Travis is broken on Mac OS
# builds right now due to Issue 6307 (https://github.com/travis-ci/travis-ci/issues/6307)
# and fails at the end of a successful build. This will allow the build to recover even if
# a non-zero status code is encountered. (had `- set +e`)
after_success:
  - source build_tools/travis/after_success.sh  # || echo "shell_session_update failed"
  # Build the wheels every time so we can debug
  - bash build_tools/travis/build_wheels.sh
  - ls dist/

deploy:
  provider: script
  skip_cleanup: true
  script: python -m twine upload --skip-existing dist/*.whl
  on:
    tags: true # Upload on tagged releases
    condition: "$DEPLOY = true"
